generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String         @id @default(uuid())
  name                   String
  email                  String         @unique
  password               String
  bloodType              String
  location               String
  availability           Boolean        @default(false)
  createdAt              DateTime       @default(now())
  updateAt               DateTime       @updatedAt
  userProfile            UserProfile[]
  requestedBloodRequests BloodRequest[] @relation(name: "doner")
  donatedBloodRequests   BloodRequest[] @relation(name: "requester")

  @@map("users")
}

model UserProfile {
  id               String   @id @default(uuid())
  userId           String   @unique
  bio              String
  age              Int
  lastDonationDate String
  createdAt        DateTime @default(now())
  updateAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}

model BloodRequest {
  id              String        @id @default(uuid())
  donorId         String
  requesterId     String
  phoneNumber     String
  dateOfDonation  String
  hospitalName    String
  hospitalAddress String
  reason          String
  requestStatus   RequestStatus @default(PENDING)
  createdAt       DateTime      @default(now())
  updateAt        DateTime      @updatedAt

  donor     User @relation(name: "doner", fields: [donorId], references: [id])
  requester User @relation(name: "requester", fields: [requesterId], references: [id])

  @@map("bloodRequests")
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}
